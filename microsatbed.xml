<tool name="short tandem repeats to bed features" id="microsatbed" version="1.3.0" profile="22.05">
  <description>Report short tandem repeats as bed features</description>
  <requirements>
    <requirement version="3.12.3" type="package">python</requirement>
    <requirement version="2.1.0" type="package">pyfastx</requirement>
    <requirement version="1.3.0" type="package">pytrf</requirement>
  </requirements>
   <required_files>
      <include path="find_str.py"/>
  </required_files>
   <version_command><![CDATA[python -c "import pytrf; from importlib.metadata import version; print(version('pytrf'))"]]></version_command>
  <command><![CDATA[python '${__tool_directory__}/find_str.py'
--fasta
'${reference_genome.fasta}' 
--bed
#if $reportme == "VGP":
  '$bedGC,$bedAT,$bedGA,$bedTC'
#else:
  '$bedall'
#end if
--reportme
'$reportme'
#if $perfect == "set"
 --perfect
#end if
#if $approximate == "set"
 --approximate
#end if
#if $generic == "set"
 --generic
#end if]]></command>
  <inputs>
    <conditional name="reference_genome">
        <param name="genome_type_select" type="select" label="Reference genome source" help="Select a built in or history genome for finding STRs">
            <option value="indexed">Use a Galaxy server built-in genome</option>
            <option selected="True" value="history">Use a genome fasta file from the current history</option>
        </param>
        <when value="indexed">
            <param name="fasta" type="select" optional="false" multiple="false" label="Select a built in reference genome or custom genome" help="If not listed, add a custom genome or use a history genome">
                <options from_data_table="all_fasta">
                    <filter column="2" type="sort_by"/>
                    <validator message="No genomes are available" type="no_options"/>
                </options>
            </param>
        </when>
        <when value="history">
            <param name="fasta" type="data" format="fasta" optional="true" multiple="false" label="Select a reference genome from the current history"/>
        </when>
    </conditional>
    <param name="reportme" type="select" label="Select the classes or combinations of STRs to be selected for bed output" help="">
      <option selected="True" value="VGP">Dinucleotides GC, AT, GA, TC to separate bed files</option>
      <option value="ALL">All mono--hepta nucleotide STRs to a single bed file</option>
      <option value="NOMONO">All di,tri,tetra,penta and hepta nucleotide STRs to a single bed file - no monomers</option>
      <option value="DI">All dinucleotide motifs to a single bed file</option>
      <option value="TRI">All trinucleotide motifs to a single bed file</option>
      <option value="TETRA">All tetranucleotide motif STRs to a single bed file</option>
      <option value="PENTA">All pentanucleotide motif STRs to a single bed file</option>
      <option value="HEPTA">All heptanucleotide motif STRs to a single bed file</option>
    </param>
    <param name="perfect" type="select" label="Include all *perfect* STRs" help="Strictly defined STR. Flags can be multiple and will combine. At least one must be set." display="radio">
      <option value="set">Set this flag</option>
      <option value="notset">Do not set this flag</option>
    </param>
    <param name="approximate" type="select" label="Include also all *approximate* STRs." help="This gives about 3 fold additional bed features compared to the perfect flag. Flags can be multiple and will combine. At least one must be set." display="radio">
      <option value="notset">Do not set this flag</option>
      <option value="set">Set this flag</option>
    </param>
    <param name="generic" type="select" label="Include all *generic* STRs" help="This finds many additional bed features compared to the perfect or approximate flags. Flags can be multiple and will combine. At least one must be set." display="radio">
      <option value="notset">Do not set this flag</option>
      <option value="set">Set this flag</option>
    </param>
  </inputs>
  <outputs>
    <data name="bedall" format="bed" label="$reportme STR from $fasta.element_identifier" hidden="false">
       <filter>reportme !="VGP"</filter>
    </data>
    <data name="bedGC" format="bed" label="GC from $fasta.element_identifier" hidden="false">
       <filter>reportme == "VGP"</filter>
    </data>
     <data name="bedAT" format="bed" label="AT from $fasta.element_identifier" hidden="false">
       <filter>reportme == "VGP"</filter>
    </data>
    <data name="bedGA" format="bed" label="GA from $fasta.element_identifier" hidden="false">
       <filter>reportme == "VGP"</filter>
    </data>
     <data name="bedTC" format="bed" label="TC from $fasta.element_identifier" hidden="false">
       <filter>reportme =="VGP"</filter>
    </data>
  </outputs>
  <tests>
    <test expect_num_outputs="4">
      <conditional name="reference_genome">
          <param name="genome_type_select" value="history"/>
          <param name="fasta" value="mouse5bit.fa"/>
      </conditional>
      <output name="bedGA" value="bedGA_sample" compare="diff" lines_diff="0"/>
      <output name="bedTC" value="bedTC_sample" compare="diff" lines_diff="0"/>
      <output name="bedGC" value="bedGC_sample" compare="diff" lines_diff="0"/>
      <output name="bedAT" value="bedAT_sample" compare="diff" lines_diff="0"/>
      <param name="reportme" value="VGP"/>
      <param name="perfect" value="set"/>
      <param name="approximate" value="notset"/>
      <param name="generic" value="notset"/>
    </test>
  </tests>
  <help><![CDATA[

 **Convert short tandem repeats to bed features**
 
 See https://pytrf.readthedocs.io/en/latest/ for the pytrf documentation. Definition is quoted here:

   *A Tandem repeat (TR) in genomic sequence is a set of adjacent short DNA sequence repeated consecutively. The core sequence or repeat unit is generally called motif. 
   According to the motif length, tandem repeats can be classified as microsatellites and minisatellites. Microsatellites are also known as simple sequence repeats (SSRs) 
   or short tandem repeats (STRs) with motif length of 1-6 bp. Minisatellites are also sometimes referred to as variable number of tandem repeats (VNTRs) has longer motif length than microsatellites.*

 Pytrf is a lightweight Python C extension for identification of tandem repeats. The pytrf enables to fastly identify both exact or perfect SSRs.
 It also can find generic tandem repeats with any size of motif, such as with maximum motif length of 100 bp. Additionally, it has capability of finding approximate or imperfect tandem repeats. 

 A fasta file must be supplied for processing.

 Different subsets of STR may be selected for output. Perfect STRs are the default, but any combination with one or more of pefect, approxinate and generic.
  
 Designed to build some of the microsatellite tracks from https://github.com/arangrhie/T2T-Polish/tree/master/pattern for the VGP.
 
  ]]></help>
  <citations>
    <citation type="bibtex">@misc{pytrf,
  title = {{pytrf} Short tandem repeat finder, Accessed on July 10 2024},
  howpublished = {\url{https://github.com/lmdu/pytrf}},
  note = {Accessed on July 10 2024}
}</citation>
  </citations>
</tool>

