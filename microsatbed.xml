<tool name="short tandem repeats to bed features" id="microsatbed" version="1.3.0" profile="22.05">
  <description>Report short tandem repeats as bed features</description>
  <requirements>
    <requirement version="3.12.3" type="package">python</requirement>
    <requirement version="2.1.0" type="package">pyfastx</requirement>
    <requirement version="1.3.0" type="package">pytrf</requirement>
  </requirements>
   <required_files>
      <include path="find_str.py"/>
  </required_files>
   <version_command><![CDATA[python -c "import pytrf; from importlib.metadata import version; print(version('pytrf'))"]]></version_command>
  <command><![CDATA[python '${__tool_directory__}/find_str.py'
--fasta '${reference_genome.fasta}' 
--bed '$bed'
#if $mode_cond.mode == "SPECIFIC":
 --specific '$mode_cond.specific'
 --minreps '$mode_cond.minreps'
#else:
  #if "MONO" in $mode_cond.subset:
  --mono
  #end if
  #if "DI" in $mode_cond.subset:
  --di
  #end if
  #if "TRI" in $mode_cond.subset:
  --tri
  #end if
  #if "TETRA" in $mode_cond.subset:
  --tetra
  #end if
  #if "PENTA" in $mode_cond.subset:
  --penta
  #end if
  #if "HEXA" in $mode_cond.subset:
  --hepta
  #end if
  --monomin '$mode_cond.monomin'
  --dimin '$mode_cond.dimin'
  --trimin '$mode_cond.trimin'
  --tetramin '$mode_cond.tetramin'
  --pentamin '$mode_cond.pentamin'
  --heptamin '$mode_cond.heptamin'
#end if
]]></command>
  <inputs>
    <conditional name="reference_genome">
        <param name="genome_type_select" type="select" label="Reference genome source" help="Select a built in or history genome for finding STRs">
            <option value="indexed">Use a Galaxy server built-in genome</option>
            <option selected="True" value="history">Use a genome fasta file from the current history</option>
        </param>
        <when value="indexed">
            <param name="fasta" type="select" optional="false" multiple="false" label="Select a built in reference genome or custom genome" help="If not listed, add a custom genome or use a history genome">
                <options from_data_table="all_fasta">
                    <filter column="2" type="sort_by"/>
                    <validator message="No genomes are available" type="no_options"/>
                </options>
            </param>
        </when>
        <when value="history">
            <param name="fasta" type="data" format="fasta" optional="true" multiple="false" label="Select a reference genome from the current history"/>
        </when>
    </conditional>
    <conditional name="mode_cond">
    <param name="mode" type="select" label="Supply specific motif patterns, or report any motif?" help="Make bed features for all motifs or for nominated specific motifs">
      <option selected="True" value="ALL">Report any STR motifs</option>
      <option value="SPECIFIC">Report only specific nominated motifs</option>
    </param>
    <when value="ALL">
      <param name="subset" type="select" multiple="true" label="Choose one or more specific motif lengths to include" help="Make bed features from all motifs of these lengths">
        <option value="MONO" selected="False">All mononucleotide motifs (e.g. G)</option>
        <option value="DI">All dinucleotide motifs (e.g. GA)</option>
        <option value="TRI">All trinucleotide motifs (e.g. GCT)</option>
        <option value="TETRA">All tetranucleotide motifs (e.g. GCTA)</option>
        <option value="PENTA">All pentanucleotide motifs (e.g. GCTAC)</option>
        <option value="HEPTA">All heptanucleotide motifs (e.g. GCTACA)</option>
      </param>
      <param name="monomin" type="integer" value="2" min="2" label="Minimum number of repeats of each monomer motif to report" 
        help="WARNING: Monomers must have minimum repeats of 2 to prevent every single nucleotide being reported as a feature!. 2 is the minimum allowed here"/>
      <param name="dimin" type="integer" value="2" min="1" label="Minimum number of repeats of each dimer motif to report"/>
      <param name="trimin" type="integer" value="2" min="1" label="Minimum number of repeats of each trimer motif to report"/>
      <param name="tetramin" type="integer" value="2" min="1" label="Minimum number of repeats of each tetramer motif to report"/>
      <param name="pentamin" type="integer" value="2" min="1" label="Minimum number of repeats of each pentamer motif to report"/>
      <param name="heptamin" type="integer" value="2" min="1" label="Minimum number of repeats of each heptamer motif to report"/>
    </when>
    <when value="SPECIFIC">
      <param name="specific" type="text" label="Supply a specific motif pattern using uppercase ACGT nucleotide abbreviations. Separate multiple patterns with commas such as GA,GC" 
         help="Make bed features only for the nominated specific motifs."/>
      <param name="minreps" type="integer" value="2" min="1" label="Minimum number of repeats of each of these motifs to report" 
        help="Short tandem repeats require 2 or more consecutive motifs by definition. WARNING: If monomers are included, every single matching base will be reported as a STR if minimum repeats = 1!"/>
    </when>
    </conditional>
  </inputs>
  <outputs>
    <data name="bed" format="bed" label="STR from $fasta.element_identifier" hidden="false"/>
  </outputs>
  <tests>
    <test expect_num_outputs="1">
      <conditional name="reference_genome">
          <param name="genome_type_select" value="history"/>
          <param name="fasta" value="humsamp.fa"/>
      </conditional>
      <conditional name="mode_cond">
          <param name="mode" value="ALL"/>
          <param name="subset" value="DI,TRI,TETRA,PENTA,HEPTA"/>
          <param name="dimin" value="2"/>
          <param name="trimin" value="2"/>
          <param name="tetramin" value="2"/>
          <param name="pentamin" value="2"/>
          <param name="heptamin" value="2"/>
      </conditional>
      <output name="bed" value="bed_sample" compare="diff" lines_diff="0"/>
    </test>    
    <test expect_num_outputs="1">
      <conditional name="reference_genome">
          <param name="genome_type_select" value="history"/>
          <param name="fasta" value="humsamp.fa"/>
      </conditional>
      <conditional name="mode_cond">
          <param name="mode" value="SPECIFIC"/>
          <param name="specific" value="GC"/>
          <param name="minreps" value="2"/>
      </conditional>
      <output name="bed" value="dibed_sample" compare="diff" lines_diff="0"/>
    </test>
  </tests>
  <help><![CDATA[

 **Convert short tandem repeats to bed features**
 
 See https://pytrf.readthedocs.io/en/latest/ for the pytrf documentation. Definition is quoted here:

   *A Tandem repeat (TR) in genomic sequence is a set of adjacent short DNA sequence repeated consecutively. The core sequence or repeat unit is generally called motif. 
   According to the motif length, tandem repeats can be classified as microsatellites and minisatellites. Microsatellites are also known as simple sequence repeats (SSRs) 
   or short tandem repeats (STRs) with motif length of 1-6 bp. Minisatellites are also sometimes referred to as variable number of tandem repeats (VNTRs) has longer motif length than microsatellites.*

 Pytrf is a lightweight Python C extension for identification of tandem repeats. The pytrf enables to fastly identify both exact or perfect SSRs.
 It also can find generic tandem repeats with any size of motif, such as with maximum motif length of 100 bp. Additionally, it has capability of finding approximate or imperfect tandem repeats. 

 A fasta file must be supplied for processing.

 Different subsets of STR may be selected for output.
  
 Designed to build some of the microsatellite tracks from https://github.com/arangrhie/T2T-Polish/tree/master/pattern for the VGP.
 
  ]]></help>
  <citations>
    <citation type="bibtex">@misc{pytrf,
  title = {{pytrf} Short tandem repeat finder, Accessed on July 10 2024},
  howpublished = {\url{https://github.com/lmdu/pytrf}},
  note = {Accessed on July 10 2024}
}</citation>
  </citations>
</tool>

